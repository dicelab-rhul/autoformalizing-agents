{
  "name": "Lasaku",
  "strategy_name": "tit-for-tat",
  "strategy": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "game_rules": "\n:- discontiguous initial/1.\n:- discontiguous holds/2.\n:- discontiguous payoff/4.\n:- discontiguous finally/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n\n/* Game specific predicates for the Rival Corporations Espionage Game */\n\n/* Payoff matrix for the Espionage Game */\npayoff('Espionage', 'Espionage', 2, 2).\npayoff('Espionage', 'NoEspionage', 7, 1).\npayoff('NoEspionage', 'Espionage', 1, 7).\npayoff('NoEspionage', 'NoEspionage', 5, 5).\n\n/* Initial state */\ninitial(s0).\n\n/* What holds initially: who is a player, their role, and whether they can play */\ninitially(player(corp1), s0).\ninitially(player(corp2), s0).\ninitially(role(corp1, row), s0).\ninitially(role(corp2, col), s0).\ninitially(control(corp1), s0).\ninitially(control(corp2), s0).\ninitially(default_move(_, 'NoEspionage'), s0).\n\n/* When a state is final: no need to check content as it is generated by game/2 */\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n/* A legal move is a possible move where the player has control (is its turn) */\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n/* What is possible for a player to choose */\npossible(move(P, 'Espionage'), S):- holds(player(P), S).\npossible(move(P, 'NoEspionage'), S):- holds(player(P), S).\n\n/* Moves that are opposite to each other */\nopposite_move('Espionage', 'NoEspionage').\nopposite_move('NoEspionage', 'Espionage').\n\n/* The effects of a move: if P has chosen M, then in the next state this is what they did */\neffect(did(P, M), move(P, M), _S).\n\n/* The effects of a move: once a move is made, the player loses control, i.e., cannot move anymore */\nabnormal(control(P), move(P, _M), _S).\n\n/* What holds finally: the outcome with players, Moves, and Utilities */\nfinally(outcome(P1, M1, U1, P2, M2, U2), S):-\n    final(S),\n    holds(role(P1, row), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, col), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n/* Goals achieved by the players */\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1, _, U1, _, _, _), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_, _, _, P2, _, U2), S).\n",
  "game_moves": [
    "NoEspionage",
    "Espionage"
  ],
  "game_players": [
    "corp1",
    "corp2"
  ],
  "status": "correct",
  "moves": [
    "NoEspionage",
    "NoEspionage",
    "Espionage",
    "Espionage"
  ],
  "payoffs": [
    5.0,
    1.0,
    2.0,
    7.0
  ],
  "total_payoff": 15.0,
  "default_move": "NoEspionage",
  "trace_messages": [],
  "attempts": 1
}