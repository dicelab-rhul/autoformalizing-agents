{
  "name": "Fawola",
  "strategy_name": "tit-for-tat",
  "strategy": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "game_rules": "\n:- discontiguous initial/1.\n:- discontiguous payoff/4.\n:- discontiguous initialState/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Payoff matrix for the energy investment game\npayoff('wind', 'wind', 5, -5).\npayoff('solar', 'solar', 5, -5).\npayoff('wind', 'solar', -4, 4).\npayoff('solar', 'wind', -4, 4).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(renewable_startup), s0).\ninitially(player(traditional_company), s0).\ninitially(role(renewable_startup, startup), s0).\ninitially(role(traditional_company, corporation), s0).\ninitially(control(renewable_startup), s0).\ninitially(control(traditional_company), s0).\ninitially(default_move(_, 'wind'), s0).\n\n% A state is final after both players have moved\nfinal(do(move(_C2, _M2), do(move(_C1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P, 'wind'), S):- holds(player(P), S).\npossible(move(P, 'solar'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other.\nopposite_move('wind', 'solar').\nopposite_move('solar', 'wind').\n\n% The effects of a move: if P has chosen M, then in the next state this is what they did.\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e., cannot move anymore.\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(P1, M1, U1, P2, M2, U2), S):-\n    final(S),\n    holds(role(P1, startup), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, corporation), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1, _, U1, _, _, _), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_, _, _, P2, _, U2), S).\n",
  "game_moves": [
    "solar",
    "wind"
  ],
  "game_players": [
    "renewable_startup",
    "traditional_company"
  ],
  "status": "correct",
  "moves": [
    "wind",
    "wind",
    "solar",
    "solar"
  ],
  "payoffs": [
    5.0,
    -4.0,
    5.0,
    -4.0
  ],
  "total_payoff": 2.0,
  "default_move": "wind",
  "trace_messages": [],
  "attempts": 1
}