{
  "name": "Zugeyi",
  "strategy_name": "tit-for-tat",
  "strategy": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "game_rules": " \n:- discontiguous payoff/6.\n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n:- discontiguous opposite_move/2.\n\n/* Game specific predicates for CO2 Emission Reduction Game */\n\n/* Payoff matrix for CO2 Emission Reduction */\npayoff('High', 'High', -10, -10).\npayoff('Cut', 'High', -4, 4).\npayoff('High', 'Cut', 4, -4).\npayoff('Cut', 'Cut', 0, 0).\n\n/* Initial state */\ninitial(s0).\n\n/* What holds initially: who is a player, their role, and whether they can play. */\ninitially(player(country1), s0).\ninitially(player(country2), s0).\ninitially(role(country1, row), s0).\ninitially(role(country2, col), s0).\ninitially(control(country1), s0).\ninitially(control(country2), s0).\ninitially(default_move(_, 'Cut'), s0).\n\n/* When a state is final: no need to check content as it generated by game/2, */\n/* implying it is a legal state. */\nfinal(do(move(_Country2, _M2), do(move(_Country1, _M1), S))):-initial(S).\n\n/* A legal move is a possible move where the player has control (is its turn). */\nlegal(move(Country, M), S):- possible(move(Country, M), S), holds(control(Country), S).\n\n/* What is possible for a player to choose */\npossible(move(Country, 'High'), S):- holds(player(Country), S).\npossible(move(Country, 'Cut'), S):- holds(player(Country), S).\n\n/* Moves that are opposite to each other. */\nopposite_move('High', 'Cut').\nopposite_move('Cut', 'High').\n\n/* The effects of a move: if Country has chosen M, then in the next state this */\n/* is what they did. */\neffect(did(Country, M), move(Country, M), _S).\n\n/* The effects of a move: once a move is made, the player loses control, i.e. */\n/* cannot move anymore. */\nabnormal(control(Country), move(Country, _M), _S).\n\n/* What holds finally: the outcome with players, Moves, and Utilities. */\nfinally(outcome(Country1, M1, U1, Country2, M2, U2), S):-\n    final(S),\n    holds(role(Country1, row), S),\n    holds(did(Country1, M1), S),\n    holds(role(Country2, col), S),\n    holds(did(Country2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n/* Goals achieved by the players. */\nfinally(goal(Country1, U1), S):-\n    finally(outcome(Country1, _, U1, _, _, _), S).\nfinally(goal(Country2, U2), S):-\n    finally(outcome(_, _, _, Country2, _, U2), S).\n",
  "game_moves": [
    "Cut",
    "High"
  ],
  "game_players": [
    "country1",
    "country2"
  ],
  "status": "correct",
  "moves": [
    "Cut",
    "Cut",
    "High",
    "High"
  ],
  "payoffs": [
    0.0,
    -4.0,
    -10.0,
    4.0
  ],
  "total_payoff": -10.0,
  "default_move": "Cut",
  "trace_messages": [],
  "attempts": 1
}