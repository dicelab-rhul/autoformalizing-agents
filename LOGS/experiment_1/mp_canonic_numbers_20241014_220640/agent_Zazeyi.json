{
  "name": "Zazeyi",
  "strategy_name": "tit-for-tat",
  "strategy": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "game_rules": "\n:- discontiguous holds/2.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Game specific predicates for Matching Pennies (MP)\n\n% Payoff matrix for MP\npayoff('heads', 'heads', 1, -1).\npayoff('tails', 'tails', 1, -1).\npayoff('heads', 'tails', -1, 1).\npayoff('tails', 'heads', -1, 1).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(p1), s0).\ninitially(player(p2), s0).\ninitially(role(p1, row), s0).\ninitially(role(p2, col), s0).\ninitially(control(p1), s0).\ninitially(control(p2), s0).\ninitially(default_move(_, 'heads'), s0).\n\n% When a state is final: no need to check content as it generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))) :- initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(P, M), S) :- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P, 'heads'), S) :- holds(player(P), S).\npossible(move(P, 'tails'), S) :- holds(player(P), S).\n\n% Moves that are opposite to each other.\nopposite_move('heads', 'tails').\nopposite_move('tails', 'heads').\n\n% The effects of a move: if P has chosen M, then in the next state this\n% is what they did.\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.\n% cannot move anymore.\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(P1, M1, U1, P2, M2, U2), S) :-\n    final(S),\n    holds(role(P1, row), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, col), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(P1, U1), S) :-\n    finally(outcome(P1, _, U1, _, _, _), S).\nfinally(goal(P2, U2), S) :-\n    finally(outcome(_, _, _, P2, _, U2), S).\n",
  "game_moves": [
    "tails",
    "heads"
  ],
  "game_players": [
    "p1",
    "p2"
  ],
  "status": "correct",
  "moves": [
    "heads",
    "heads",
    "tails",
    "tails"
  ],
  "payoffs": [
    1.0,
    -1.0,
    1.0,
    -1.0
  ],
  "total_payoff": 0.0,
  "default_move": "heads",
  "trace_messages": [],
  "attempts": 1
}