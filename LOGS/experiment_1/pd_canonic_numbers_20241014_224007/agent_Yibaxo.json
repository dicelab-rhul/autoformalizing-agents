{
  "name": "Yibaxo",
  "strategy_name": "tit-for-tat",
  "strategy": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "game_rules": "\n:- discontiguous payoff/4.\n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous opposite_move/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Payoff matrix for the Prisoner's Dilemma game as described\npayoff('confess', 'confess', -5, -5).\npayoff('silence', 'confess', -10, 0).\npayoff('confess', 'silence', 0, -10).\npayoff('silence', 'silence', -1, -1).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: players, roles, and control\ninitially(player(suspect1), s0).\ninitially(player(suspect2), s0).\ninitially(role(suspect1,row), s0).\ninitially(role(suspect2,col), s0).\ninitially(control(suspect1), s0).\ninitially(control(suspect2), s0).\ninitially(default_move(_, 'silence'), s0).\n\n% When a state is final\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control (is its turn)\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P,'confess'), S):- holds(player(P), S).\npossible(move(P,'silence'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other\nopposite_move('confess', 'silence').\nopposite_move('silence', 'confess').\n\n% The effects of a move: if P has chosen M, then in the next state this is what they did\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: once a move is made, the player loses control\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally: the outcome, including players, moves, and utilities (negative for prison time)\nfinally(outcome(P1,M1,U1,P2,M2,U2), S):-\n    final(S),\n    holds(role(P1, row), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, col), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1,_,U1,_,_,_), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_,_,_,P2,_,U2), S).\n",
  "game_moves": [
    "confess",
    "silence"
  ],
  "game_players": [
    "suspect1",
    "suspect2"
  ],
  "status": "correct",
  "moves": [
    "silence",
    "silence",
    "confess",
    "confess"
  ],
  "payoffs": [
    -1.0,
    -10.0,
    -5.0,
    0.0
  ],
  "total_payoff": -16.0,
  "default_move": "silence",
  "trace_messages": [],
  "attempts": 1
}