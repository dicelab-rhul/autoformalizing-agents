{
  "name": "Wenoku",
  "strategy_name": "tit-for-tat",
  "strategy": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "game_rules": "\n% Domain specific axioms for the gallery promotion game\n\n:- discontiguous possible/3.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(small_gallery_owner), s0).\ninitially(player(big_gallery_owner), s0).\ninitially(role(small_gallery_owner, small), s0).\ninitially(role(big_gallery_owner, big), s0).\ninitially(control(small_gallery_owner), s0).\ninitially(control(big_gallery_owner), s0).\ninitially(default_move(_, 'PromotePainter1'), s0).\n\n% When a state is final: no need to check content as it is generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(P, M), S):- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P, 'PromotePainter1'), S):- holds(player(P), S).\npossible(move(P, 'PromotePainter2'), S):- holds(player(P), S).\n\n% Moves that are opposite to each other\nopposite_move('PromotePainter1', 'PromotePainter2').\nopposite_move('PromotePainter2', 'PromotePainter1').\n\n% The effects of a move: if P has chosen M, then in the next state this\n% is what they did.\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.\n% cannot move anymore.\nabnormal(control(P), move(P, _M), _S).\n\n% Payoff specification for the outcome of the moves.\n% If choices match, small gallery owner wins and big gallery owner loses 1 point.\npayoff('PromotePainter1', 'PromotePainter1', 1, -1).\npayoff('PromotePainter2', 'PromotePainter2', 1, -1).\n\n% If choices differ, big gallery owner wins and small gallery owner loses 1 point.\npayoff('PromotePainter1', 'PromotePainter2', -1, 1).\npayoff('PromotePainter2', 'PromotePainter1', -1, 1).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(P1, M1, U1, P2, M2, U2), S):-\n    final(S),\n    holds(role(P1, small), S),\n    holds(did(P1, M1), S),\n    holds(role(P2, big), S),\n    holds(did(P2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(P1, U1), S):-\n    finally(outcome(P1, _, U1, _, _, _), S).\nfinally(goal(P2, U2), S):-\n    finally(outcome(_, _, _, P2, _, U2), S).\n\n",
  "game_moves": [
    "PromotePainter2",
    "PromotePainter1"
  ],
  "game_players": [
    "small_gallery_owner",
    "big_gallery_owner"
  ],
  "status": "correct",
  "moves": [
    "PromotePainter1",
    "PromotePainter1",
    "PromotePainter2",
    "PromotePainter2"
  ],
  "payoffs": [
    1.0,
    -1.0,
    1.0,
    -1.0
  ],
  "total_payoff": 0.0,
  "default_move": "PromotePainter1",
  "trace_messages": [],
  "attempts": 1
}