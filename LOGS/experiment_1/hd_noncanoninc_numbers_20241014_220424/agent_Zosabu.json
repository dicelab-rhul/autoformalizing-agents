{
  "name": "Zosabu",
  "strategy_name": "tit-for-tat",
  "strategy": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "game_rules": "\n/* Domain specific predicates for the Family Budget Negotiation game */\n\n% Payoff matrix for Family Budget Negotiation\npayoff('Firm', 'Firm', -10, -10).\npayoff('Compromise', 'Firm', -1, 1).\npayoff('Firm', 'Compromise', 1, -1).\npayoff('Compromise', 'Compromise', 0, 0).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(husband), s0).\ninitially(player(wife), s0).\ninitially(role(husband, role1), s0).\ninitially(role(wife, role2), s0).\ninitially(control(husband), s0).\ninitially(control(wife), s0).\ninitially(default_move(_, 'Compromise'), s0).\n\n:- discontiguous possible/3.\n% What is possible for a player to choose\npossible(move(P, 'Firm'), S) :- holds(player(P), S).\npossible(move(P, 'Compromise'), S) :- holds(player(P), S).\n\n% Moves that are opposite to each other.\nopposite_move('Compromise', 'Firm').\nopposite_move('Firm', 'Compromise').\n\n% The effects of a move: if P has chosen M, then in the next state this\n% is what they did.\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e.\n% cannot move anymore.\nabnormal(control(P), move(P, _M), _S).\n",
  "game_moves": [
    "Compromise",
    "Firm"
  ],
  "game_players": [
    "husband",
    "wife"
  ],
  "status": "syntactic_error",
  "moves": [],
  "payoffs": [],
  "total_payoff": 0,
  "default_move": "Compromise",
  "trace_messages": [],
  "attempts": 5
}