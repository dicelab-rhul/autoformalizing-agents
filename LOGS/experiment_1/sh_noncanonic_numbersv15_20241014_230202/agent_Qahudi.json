{
  "name": "Qahudi",
  "strategy_name": "tit-for-tat",
  "strategy": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "game_rules": " \n:- discontiguous payoff/6.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Payoff matrix for the tech collaboration game\npayoff('Commit', 'Commit', 10, 10).\npayoff('Commit', 'Pullback', 0, 5).\npayoff('Pullback', 'Commit', 5, 0).\npayoff('Pullback', 'Pullback', 4, 4).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(t1), s0).\ninitially(player(t2), s0).\ninitially(role(t1,row), s0).\ninitially(role(t2,col), s0).\ninitially(control(t1), s0).\ninitially(control(t2), s0).\ninitially(default_move(_, 'Pullback'), s0).\n\n% When a state is final: no need to check content as it is generated by game/2,\n% implying it is a legal state.\nfinal(do(move(_T2, _M2), do(move(_T1, _M1), S))):-initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(T, M), S):- possible(move(T, M), S), holds(control(T), S).\n\n% What is possible for a player to choose\npossible(move(T,'Commit'), S):- holds(player(T), S).\npossible(move(T,'Pullback'), S):- holds(player(T), S).\n\n% Moves that are opposite to each other.\nopposite_move('Commit', 'Pullback').\nopposite_move('Pullback', 'Commit').\n\n% The effects of a move: if T has chosen M, then in the next state this is what they did.\neffect(did(T, M), move(T, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e. cannot move anymore.\nabnormal(control(T), move(T, _M), _S).\n\n% What holds finally: the outcome with players, moves, and utilities.\nfinally(outcome(T1,M1,U1,T2,M2,U2), S):-\n    final(S),\n    holds(role(T1, row), S),\n    holds(did(T1, M1), S),\n    holds(role(T2, col), S),\n    holds(did(T2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(T1, U1), S):-\n    finally(outcome(T1,_,U1,_,_,_), S).\n\nfinally(goal(T2, U2), S):-\n    finally(outcome(_,_,_,T2,_,U2), S).\n\n",
  "game_moves": [
    "Pullback",
    "Commit"
  ],
  "game_players": [
    "t1",
    "t2"
  ],
  "status": "correct",
  "moves": [
    "Pullback",
    "Pullback",
    "Commit",
    "Commit"
  ],
  "payoffs": [
    4.0,
    5.0,
    10.0,
    0.0
  ],
  "total_payoff": 19.0,
  "default_move": "Pullback",
  "trace_messages": [],
  "attempts": 1
}