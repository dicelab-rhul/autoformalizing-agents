{
  "name": "Husuto",
  "strategy_name": "tit-for-tat",
  "strategy": "select(P, O, S, M):-\n    \\+ holds(last_move(O, _LMo), S),\n    holds(default_move(P, M), S).\nselect(_P, O, S, Mo):-\n    holds(last_move(O, Mo), S).",
  "game_rules": "\n:- discontiguous initial/1.\n:- discontiguous initially/2.\n:- discontiguous final/1.\n:- discontiguous legal/2.\n:- discontiguous possible/2.\n:- discontiguous effect/3.\n:- discontiguous abnormal/3.\n:- discontiguous finally/2.\n\n% Game specific predicates for the Defense Pact Game\n\n% Payoff matrix for the Defense Pact Game\npayoff('Sign', 'Sign', 4, 4).\npayoff('Sign', 'NotSign', 0, 2).\npayoff('NotSign', 'Sign', 2, 0).\npayoff('NotSign', 'NotSign', 1, 1).\n\n% Initial state\ninitial(s0).\n\n% What holds initially: who is a player, their role, and whether they can play.\ninitially(player(nation1), s0).\ninitially(player(nation2), s0).\ninitially(role(nation1, row), s0).\ninitially(role(nation2, col), s0).\ninitially(control(nation1), s0).\ninitially(control(nation2), s0).\ninitially(default_move(_, 'NotSign'), s0).\n\n% When a state is final\nfinal(do(move(_P2, _M2), do(move(_P1, _M1), S))) :- initial(S).\n\n% A legal move is a possible move where the player has control (is its turn).\nlegal(move(P, M), S) :- possible(move(P, M), S), holds(control(P), S).\n\n% What is possible for a player to choose\npossible(move(P, 'Sign'), S) :- holds(player(P), S).\npossible(move(P, 'NotSign'), S) :- holds(player(P), S).\n\n% Moves that are opposite to each other.\nopposite_move('Sign', 'NotSign').\nopposite_move('NotSign', 'Sign').\n\n% The effects of a move: if P has chosen M, then in the next state this is what they did.\neffect(did(P, M), move(P, M), _S).\n\n% The effects of a move: once a move is made, the player loses control, i.e., cannot move anymore.\nabnormal(control(P), move(P, _M), _S).\n\n% What holds finally: the outcome with players, Moves, and Utilities.\nfinally(outcome(Nation1, M1, U1, Nation2, M2, U2), S) :-\n    final(S),\n    holds(role(Nation1, row), S),\n    holds(did(Nation1, M1), S),\n    holds(role(Nation2, col), S),\n    holds(did(Nation2, M2), S),\n    payoff(M1, M2, U1, U2).\n\n% Goals achieved by the players.\nfinally(goal(Nation1, U1), S) :-\n    finally(outcome(Nation1, _, U1, _, _, _), S).\nfinally(goal(Nation2, U2), S) :-\n    finally(outcome(_, _, _, Nation2, _, U2), S).\n",
  "game_moves": [
    "NotSign",
    "Sign"
  ],
  "game_players": [
    "nation1",
    "nation2"
  ],
  "status": "correct",
  "moves": [
    "NotSign",
    "NotSign",
    "Sign",
    "Sign"
  ],
  "payoffs": [
    1.0,
    2.0,
    4.0,
    0.0
  ],
  "total_payoff": 7.0,
  "default_move": "NotSign",
  "trace_messages": [],
  "attempts": 1
}